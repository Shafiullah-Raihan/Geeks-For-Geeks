///https://www.geeksforgeeks.org/problems/longest-sub-array-with-sum-k0809/1?page=1&sortBy=submissions

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
ðŸ˜Ž
class Solution {
  public:
    int lenOfLongestSubarr(vector<int>& arr, int k) {
        unordered_map<int, int> mp;
        int ans = 0;
        int prefixSum = 0;
        for(int i=0;i<arr.size();i++){
            prefixSum += arr[i];
            if(prefixSum == k){
                ans = i+1;
            }
            else if(mp.find(prefixSum-k) != mp.end())
            {
                ans = max(ans,i - mp[prefixSum-k]);
            }
            if(mp.find(prefixSum) == mp.end())
            {
                mp[prefixSum] = i;
            }
        }
        return ans;

    
    }
};
ðŸ˜Ž
//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    cin.ignore(); // Ignore newline character after t

    while (t--) {
        vector<int> arr;
        int k;
        string inputLine;

        getline(cin, inputLine); // Read the array input as a line
        stringstream ss(inputLine);
        int value;
        while (ss >> value) {
            arr.push_back(value);
        }

        cin >> k;
        cin.ignore(); // Ignore newline character after k input

        Solution solution;
        cout << solution.lenOfLongestSubarr(arr, k) << "\n";
        cout << "~\n";
    }

    return 0;
}

// } Driver Code Ends
