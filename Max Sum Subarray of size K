///https://www.geeksforgeeks.org/problems/max-sum-subarray-of-size-k5313/1

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

ðŸ˜Ž
class Solution {
  public:
    int maximumSumSubarray(vector<int>& arr, int k) {
       int left=0,right=0;
       long long maxSum=0,tempSum=0;
       while(right<arr.size()){
           
           if(right-left+1 <k){
               tempSum += arr[right];
               right++;
           }
           else{
               tempSum+=arr[right];
               maxSum = max(maxSum,tempSum);
               tempSum -= arr[left];
               left++,right++;
           }
       }
       return maxSum;
    }
};
ðŸ˜Ž
//{ Driver Code Starts.
int main() {
    string ts;
    getline(cin, ts);
    int t = stoi(ts);
    while (t--) {

        vector<int> arr;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }
        string ks;
        getline(cin, ks);
        int k = stoi(ks);
        Solution ob;
        int ans = ob.maximumSumSubarray(arr, k);
        cout << ans << "\n";
        cout << "~" << endl;
    }
    return 0;
}
// } Driver Code Ends
