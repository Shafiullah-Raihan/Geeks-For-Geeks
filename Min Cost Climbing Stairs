///https://www.geeksforgeeks.org/problems/min-cost-climbing-stairs/1
//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

//Back-end complete function Template for C++
ðŸ˜Ž
class Solution {
  public:
    int minCostClimbingStairs(vector<int>& cost) {
        // Write your code here
        int n = cost.size();
        vector<int>dp(n+1,0);
        dp[0]=cost[0];
        dp[1]= min(dp[0]+cost[1],cost[1]);
        for(int i=2;i<=n;i++)
        {
            if(i==n) 
            {
                dp[i] = min(dp[i-1],dp[i-2]);continue;
            }
            dp[i]= min(dp[i-1],dp[i-2])+cost[i];
        }
        return dp[n];
    }
};
ðŸ˜Ž

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    cin.ignore();

    while (t-- > 0) {
        string str;
        getline(cin, str);

        stringstream ss(str);
        vector<int> arr;
        int num;
        while (ss >> num) {
            arr.push_back(num);
        }
        Solution sln;
        int res = sln.minCostClimbingStairs(arr);
        cout << res << endl;
        cout << "~" << endl;
    }

    return 0;
}
// } Driver Code Ends
