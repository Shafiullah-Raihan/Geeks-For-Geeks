///https://www.geeksforgeeks.org/problems/postfix-to-infix-conversion/1?itm_source=geeksforgeeks&itm_medium=article&itm_campaign=practice_card

//{ Driver Code Starts
// Initial Template for C++
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function Template for C++
ðŸ˜Ž

class Solution {
  public:
    bool isOperator(char c) {
        return c == '+' || c == '-' || c == '*' || c == '/';
    }
    string postToInfix(string postfix) {
        stack<string> s;

        for (char c : postfix) {
            if (isalnum(c)) {
                s.push(string(1, c));
                
            } 
            else if (isOperator(c)) {
                string operand2 = s.top(); s.pop();
                string operand1 = s.top(); s.pop();
    
                string infix = "(" + operand1 + c + operand2 + ")";
                s.push(infix);
            }
        }
    
        return s.top();
    }
};
ðŸ˜Ž
//{ Driver Code Starts.

int main() {
    int t = 1;
    cin >> t;

    // freopen ("output_gfg.txt", "w", stdout);

    while (t--) {
        // Input
        string postfix;
        cin >> postfix;
        // char marker; cin >> marker;

        Solution obj;
        cout << obj.postToInfix(postfix) << endl;

        // cout << "~\n";
    
cout << "~" << "\n";
}
    fclose(stdout);

    return 0;
}

// } Driver Code Ends
