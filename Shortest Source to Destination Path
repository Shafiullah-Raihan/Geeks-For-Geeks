///https://www.geeksforgeeks.org/problems/shortest-source-to-destination-path3544/1?page=4&company=Samsung&sortBy=submissions

//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++
ðŸ˜Ž
class Solution {
  public:
  
    int dx[4] = {+1,-1,0,0};
    int dy[4] = {0,0,+1,-1};
    bool isValid(vector<vector<int>> A,int N,int M,int x,int y){
      return (x>=0 && x<N && y>=0 && y<M  && A[x][y] == 1);
    }
  
  
    int shortestDistance(int N, int M, vector<vector<int>> A, int X, int Y) {
       
        int vis[N][M];
        memset(vis,0,sizeof(vis));
        
        if(A[0][0] !=1 || A[X][Y] != 1) return -1;
        
        vis[0][0] = 1;
        
        queue<pair<int,pair<int,int>>> pq;
        
        pq.push({0,{0,0}});
        
        while(!pq.empty()){
            auto u = pq.front();
            pq.pop();
            int x1 =u.second.first, y1 = u.second.second, res= u.first;
            if(X== x1 && Y == y1) return res;
            
            for(int i=0;i<4;i++){
                int x = x1 + dx[i],y = y1 + dy[i];
                
                if(isValid(A,N,M,x,y) && vis[x][y]==0 ){
                    vis[x][y] = 1;
                    pq.push({res+1,{x,y}});
                }
            }
        }
        
        return -1;
        
    }
};
ðŸ˜Ž
//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int N, M, x, y;
        cin >> N >> M;
        vector<vector<int>> v(N, vector<int>(M));
        for (int i = 0; i < N; i++)
            for (int j = 0; j < M; j++) cin >> v[i][j];
        cin >> x >> y;
        Solution ob;
        cout << ob.shortestDistance(N, M, v, x, y) << "\n";
    
cout << "~" << "\n";
}
}
// } Driver Code Ends
