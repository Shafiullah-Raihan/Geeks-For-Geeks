///https://www.geeksforgeeks.org/problems/subsets-1587115621/1?page=1&category=subset&sortBy=submissions


//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

ðŸ˜Ž
// } Driver Code Ends
class Solution
{
    public:
    
    
    void backTrack(vector<int>& nums,vector<int>& stateAnswer,vector<vector<int>>& ans,int start)
    {
        ans.push_back(stateAnswer);
        for(int i=start;i<nums.size();i++)
        {
            if(i != start && nums[i] == nums[i-1]) continue;
            stateAnswer.push_back(nums[i]);
            backTrack(nums,stateAnswer,ans,i+1);
            stateAnswer.pop_back();
        }
    }
    
    vector<vector<int> > AllSubsets(vector<int> nums, int n)
    {
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;
        vector<int> stateAnswer;
        backTrack(nums,stateAnswer,ans,0);
        return ans;
    }
};
ðŸ˜Ž



//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        vector<int> A;
        int x;
        for(int i=0;i<n;i++){
            cin>>x;
            A.push_back(x);
        }
        Solution obj;
        vector<vector<int> > result = obj.AllSubsets(A,n);
        // printing the output
        for(int i=0;i<result.size();i++){
            cout<<'(';
            for(int j=0;j<result[i].size();j++){
                cout<<result[i][j];
                if(j<result[i].size()-1)
                    cout<<" ";
            }
            cout<<")";
        }
        cout<<"\n";
    
cout << "~" << "\n";
}
}   



// } Driver Code Ends
